/* 
    Quadrotor Engine Set (of 4 engines)
    Created by jamesfe
    
    02JUL2014 - Created

*/

#include<iostream>

#include "qEngineSet.hpp"

using namespace std;

    qEngineSet::qEngineSet() {
    numEngines = 4;
    spinTestMS = 2000;
}

int qEngineSet::setupEngines() {
    int GPIOSet = gpioInitialise();
    if(GPIOSet==PI_INIT_FAILED) {
        cout << "PIGPIO Initialization Failed." << endl;
        return(-1);
    }
    
    // perform spin test
    // this is dangerous!! we need to warn the user.
    for(int i = 0; i < 4; i++) {
        quadEngines[i].stop();
    }
    cout << "DANGER!!!" << endl;
    cout << "About to perform the spin test; connect power supply and " << endl;
    cout << "press enter to continue." << endl;
    cout << "All rotors will spin for some time." << endl;
    char k;
    cin >> k; 
    for(int i = 0; i < 4; i++) {
        quadEngines[i].spinTest(spinTestMS);
    }
}

void qEngineSet::updateLEDMode(int newMode) {
    for(int i = 0; i < numEngines; i++) {
        quadEngines[i].updateLEDMode(newMode);
    }
}

int qEngineSet::terminate() {
    float qRet = 0.0;
    for(int i = 0; i < numEngines; i++) {
        qRet+=quadEngines[i].stop();
    }  
    gpioTerminate();
    if(qRet>0) {
        return(1);    
    }
    return(0);
}

int* qEngineSet::getEngineVals() {
    int eVals[numEngines];
    for(int i = 0; i < numEngines; i++) {
        eVals[i] = quadEngines[i].getPower();
    }    
}

int qEngineSet::handleKey(char k, bool shiftMode) {
    // TODO: k = tolower(k) 
    // shiftMode == true implies shift is down
    // shiftmode == false implies shift is up
    int powerDelta = 100;
    if(k=='q') {
        for(int i = 0; i < numEngines; i++) {
            quadEngines[i].stop();
        }
    }
    if(shiftMode==true) {
        // we increase power
        if(k=='i') {
            quadEngines[0].incPower(powerDelta);
        }
        if(k=='j') {
            quadEngines[1].incPower(powerDelta);
        }
        if(k=='m') {
            quadEngines[2].incPower(powerDelta);
        }
        if(k=='l') {
            quadEngines[3].incPower(powerDelta);
        }
        // all engines
        /* is it bad to assume this will happen so quickly that 
         * instability won't be generated by the latency?
         */
        if(k=='k') {
            for(int i = 0; i < numEngines; i++) {
                quadEngines[i].incPower(powerDelta);
            }
        }
    } 
    else if(shiftMode==false) {
        // we decrease power
        if(k=='i') {
            quadEngines[0].decPower(powerDelta);
        }
        if(k=='j') {
            quadEngines[1].decPower(powerDelta);
        }
        if(k=='m') {
            quadEngines[2].decPower(powerDelta);
        }
        if(k=='l') {
            quadEngines[3].decPower(powerDelta);
        }
        // all engines
        // same query: latency an issue?
        if(k=='k') {
            for(int i = 0; i < numEngines; i++) {
                quadEngines[i].decPower(powerDelta);
            }
        }
    }

}

int qEngineSet::stabilize(sensorData inSensorData) {
    /*
     * Stablize the quadcopter.   
     */
}
